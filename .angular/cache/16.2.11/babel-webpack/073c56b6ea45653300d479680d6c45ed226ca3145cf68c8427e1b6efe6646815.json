{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class QuestionService {\n  constructor(http) {\n    this.http = http;\n  }\n  getQuestions() {\n    return this.http.get('assets/questions.txt', {\n      responseType: 'text'\n    });\n  }\n  static #_ = this.ɵfac = function QuestionService_Factory(t) {\n    return new (t || QuestionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuestionService,\n    factory: QuestionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["QuestionService","constructor","http","getQuestions","get","responseType","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/danielpolak/Documents/Master/Innovation_Lab/innov_lab/Innovation-Lab-UI/src/app/question.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n  constructor(private http: HttpClient) {}\n\n  getQuestions(): Observable<any> {\n    return this.http.get('assets/questions.txt', { responseType: 'text' });\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAC1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,sBAAsB,EAAE;MAAEC,YAAY,EAAE;IAAM,CAAE,CAAC;EACxE;EAAC,QAAAC,CAAA,G;qBALUN,eAAe,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfX,eAAe;IAAAY,OAAA,EAAfZ,eAAe,CAAAa,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}